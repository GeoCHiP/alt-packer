#! /bin/sh
# Script to initiate VM configuration process
set -euo pipefail

STEP_DIR="${STEP_DIR:-/tmp/.private/root/steps}"
FILES_DIR="${FILES_DIR:-/tmp/.private/root}"
TARGET="${TARGET:-alt-server}"
VM_TYPE="${VM_TYPE:-qemu}"
BASE_VERSION="${BASE_VERSION:-10}"
SSH_USER="${SSH_USER:-test}"
TARGET_REPOS="${TARGET_REPOS:-sisyphus}"
ARCH="${ARCH:-x86_64}"
CLOUDINIT="${CLOUDINIT:-0}"
SISYPHUS="${SISYPHUS:-0}"
ROOT_PASS="${ROOT_PASS:-123}"
PASS="${PASS:-123}"

export OPENUDS_ACTOR_SSL_VALIDATION=${OPENUDS_ACTOR_SSL_VALIDATION:-"no"}
export OPENUDS_HOST=${OPENUDS_HOST:-"udshost"}
export OPENUDS_AUTHENTICATOR=${OPENUDS_AUTHENTICATOR:-"admin"}
export OPENUDS_USERNAME=${OPENUDS_USERNAME:-"root"}
export OPENUDS_PASSWORD=${OPENUDS_PASSWORD:-"udsmam0"}
export OPENUDS_ACTOR_LOG_LEVEL=${OPENUDS_ACTOR_LOG_LEVEL:-"error"}
OPENUDS_ACTOR_PRE_CONNECT=${OPENUDS_ACTOR_PRE_CONNECT:-""}
OPENUDS_ACTOR_RUN_ONCE=${OPENUDS_ACTOR_RUN_ONCE:-""}
OPENUDS_ACTOR_POST_CONFIG=${OPENUDS_ACTOR_POST_CONFIG:-""}

if test "${SISYPHUS}" == "1"; then
	TARGET_REPOS=sisyphus
fi

show_vars() {
	echo "Building box: ${TARGET}"
	echo "Steps are located in: ${STEP_DIR}"
	echo "Building box for VM type: ${VM_TYPE}"
	echo "Operating from user: ${SSH_USER}"
	echo "Targeting repos for: ${TARGET_REPOS}"
	echo "Targeting repos for architecture: ${ARCH}"
	echo "Enable cloud-init: ${CLOUDINIT}"
	echo "Update to Sisyphus: ${SISYPHUS}"
}

main() {
	if test "${VM_TYPE}" == "qemu"; then
		${STEP_DIR}/setup_remove_cdroms_repos
		${STEP_DIR}/setup_apt
		if test "${CLOUDINIT}" == "1"; then
			${STEP_DIR}/setup_cloudinit
		fi
		${STEP_DIR}/setup_agent
		${STEP_DIR}/setup_network
		${STEP_DIR}/setup_root
		${STEP_DIR}/setup_test_user
		${STEP_DIR}/setup_restore_sshd_config
		${STEP_DIR}/setup_ssh
		${STEP_DIR}/setup_prepare_new_instance
		${STEP_DIR}/setup_ansible
	fi

	if test "${VM_TYPE}" == "vbox"; then
		${STEP_DIR}/setup_remove_cdroms_repos
		${STEP_DIR}/setup_apt
		if test "${CLOUDINIT}" == "1"; then
			${STEP_DIR}/setup_cloudinit
		fi
		${FILES_DIR}/install-guest-tools.sh
		${STEP_DIR}/setup_test_user
		${STEP_DIR}/setup_restore_sshd_config
		${STEP_DIR}/setup_ssh
		${STEP_DIR}/setup_prepare_new_instance
		${STEP_DIR}/setup_ansible
	fi

	if test "${VM_TYPE}" == "cloud"; then
		${STEP_DIR}/setup_remove_cdroms_repos
		if test "${BASE_VERSION}" == "10" || test "${BASE_VERSION}" == "10-yandex"; then
			${STEP_DIR}/setup_minimalize_server_10
		fi
		if test "${BASE_VERSION}" == "10.1" || test "${BASE_VERSION}" == "10.1-yandex"; then
			${STEP_DIR}/setup_minimalize_server_10.1
		fi
		if test "${BASE_VERSION}" == "c10f1"; then
			${STEP_DIR}/setup_c10f1_repos
		fi
		${STEP_DIR}/setup_apt
		if test "${CLOUDINIT}" == "1"; then
			if test "${BASE_VERSION}" == "8sp"; then
				${STEP_DIR}/setup_cloudinit
				${STEP_DIR}/setup_cloudinit_yandex
			elif test "${BASE_VERSION}" == "c10f1"; then
				${STEP_DIR}/setup_cloudinit_etcnet
			else
				${STEP_DIR}/setup_cloudinit_10
			fi
		fi
		${STEP_DIR}/setup_agent
		${STEP_DIR}/setup_grub2
		${STEP_DIR}/setup_grub2_fixed_eth_names
		${STEP_DIR}/setup_restore_sshd_config
		${STEP_DIR}/setup_ssh
		${STEP_DIR}/setup_prepare_new_instance
		${STEP_DIR}/setup_virtiofs
		${STEP_DIR}/setup_network_interfaces_clean
		${STEP_DIR}/setup_update_kernel
		${STEP_DIR}/setup_motd
		if [ "${CLOUDINIT}" == '1' ]; then
			${STEP_DIR}/setup_motd_cloud-init
		fi
		${STEP_DIR}/setup_reset_root_password
		${STEP_DIR}/setup_enable_sudo_controls
		${STEP_DIR}/setup_disable_sshd_password_auth
		if test "${BASE_VERSION}" == "8sp" || test "${BASE_VERSION}" == "c10f1"; then
			${STEP_DIR}/setup_integrity_fix
		fi
		${STEP_DIR}/setup_clean
	fi

	if test "${VM_TYPE}" == "vsphere"; then
		${STEP_DIR}/setup_remove_cdroms_repos
		if test "${BASE_VERSION}" == "c10f1-vmware"; then
			${STEP_DIR}/setup_c10f1_repos
		fi
		${STEP_DIR}/setup_apt
		${STEP_DIR}/setup_network_manager_ifcfg
		${STEP_DIR}/setup_grub2
		${STEP_DIR}/setup_grub2_fixed_eth_names
		${STEP_DIR}/setup_gpt_partition_table
		if test "${CLOUDINIT}" == "1"; then
			${STEP_DIR}/setup_cloudinit
			${STEP_DIR}/setup_cloudinit_vmware
		else
			${STEP_DIR}/setup_repart_growfs
		fi
		${STEP_DIR}/setup_restore_sshd_config
		${STEP_DIR}/setup_ssh
		${STEP_DIR}/setup_prepare_new_instance
		${STEP_DIR}/setup_virtiofs
		${STEP_DIR}/setup_network_interfaces_clean
		${STEP_DIR}/setup_update_kernel
		${STEP_DIR}/setup_motd
		if [ "${CLOUDINIT}" == '1' ]; then
			${STEP_DIR}/setup_motd_cloud-init
		fi
		${STEP_DIR}/setup_reset_root_password
		${STEP_DIR}/setup_sudo
		${STEP_DIR}/setup_enable_sudo_controls
		${STEP_DIR}/setup_disable_sshd_password_auth
		if test "${BASE_VERSION}" == "c10f1-vmware"; then
			${STEP_DIR}/setup_integrity_fix
		fi
		${STEP_DIR}/setup_clean
	fi

	if test "${VM_TYPE}" == "onebula"; then
		${STEP_DIR}/setup_remove_cdroms_repos
		${STEP_DIR}/setup_apt
		${STEP_DIR}/setup_onebula
		${STEP_DIR}/setup_agent
		${STEP_DIR}/setup_etcnet_clean
		${STEP_DIR}/setup_onebula_disable_NetworkManager
		${STEP_DIR}/setup_systemd-networkd
		${STEP_DIR}/setup_test_user
		${STEP_DIR}/setup_restore_sshd_config
		${STEP_DIR}/setup_ssh
		${STEP_DIR}/setup_prepare_new_instance
		${STEP_DIR}/setup_ansible
	fi

	if test "${VM_TYPE}" == "vagrant-qemu"; then
		${STEP_DIR}/setup_remove_cdroms_repos
		${STEP_DIR}/setup_apt
		if test "${CLOUDINIT}" == "1"; then
			${STEP_DIR}/setup_cloudinit
		fi
		${STEP_DIR}/setup_agent
		${STEP_DIR}/setup_network
		${STEP_DIR}/setup_root
		${STEP_DIR}/setup_vagrant
		${STEP_DIR}/setup_restore_sshd_config
		${STEP_DIR}/setup_ssh
		${STEP_DIR}/setup_prepare_new_instance
		${STEP_DIR}/setup_ansible
		${STEP_DIR}/setup_altlinux_release
	fi

	if test "${VM_TYPE}" == "vagrant-vbox"; then
		${STEP_DIR}/setup_remove_cdroms_repos
		${STEP_DIR}/setup_apt
		if test "${CLOUDINIT}" == "1"; then
			${STEP_DIR}/setup_cloudinit
		fi
		${FILES_DIR}/install-guest-tools.sh
		${STEP_DIR}/setup_vagrant
		${STEP_DIR}/setup_restore_sshd_config
		${STEP_DIR}/setup_ssh
		${STEP_DIR}/setup_prepare_new_instance
		${STEP_DIR}/setup_ansible
		${STEP_DIR}/setup_altlinux_release
	fi

	if test "${VM_TYPE}" == "openuds-actor"; then
		${STEP_DIR}/setup_remove_cdroms_repos
		${STEP_DIR}/setup_apt
		if test "${CLOUDINIT}" == "1"; then
			${STEP_DIR}/setup_cloudinit
		fi
		${STEP_DIR}/setup_agent
		${STEP_DIR}/setup_network
		${STEP_DIR}/setup_root
		${STEP_DIR}/setup_test_user
		${STEP_DIR}/setup_restore_sshd_config
		${STEP_DIR}/setup_ssh
		${STEP_DIR}/setup_prepare_new_instance
		${STEP_DIR}/setup_ansible
		${STEP_DIR}/setup_openuds_actor
	fi

	${STEP_DIR}/setup_version
}

show_vars
main
